unite_genus_rel <- transform_sample_counts(unite_genus_rare, function(x) x/sum(x))
bray_unite_genus <- phyloseq::distance(unite_genus_rel, method = "bray")
meta.unite_genus <- as(sample_data(unite_genus_rare), "data.frame")
set.seed(1546)
perm.genus <- adonis2(bray_unite_genus ~ treatment+time+farming_system+
farming_system:treatment+
treatment:time+
time:farming_system,
strata=meta.unite_genus$block,
data = meta.unite_genus,permutations = 999)
perm.genus
rm(physeq_unite_Filtered3)
rm(physeq_unite_Filtered_fam)
rm(unite_fam_rare)
rm(unite_fam_rare_rel)
rm(Kat_unite_fam_pcoa)
rm(bray_unite_fam)
rm(meta.unite_fam)
wuni_genus <- UniFrac(unite_genus_rare, weighted = TRUE, normalized = TRUE, parallel = FALSE, fast = TRUE)
meta.wuni_genus <- as(sample_data(unite_genus_rare), "data.frame")
set.seed(1420)
perm_mod_wuni_genus <- adonis(wuni_genus ~ treatment+time+farming_system+
farming_system:treatment+
treatment:time+
time:farming_system,
strata=meta.wuni_genus$block,
data = meta.wuni_genus,permutations = 999)
perm_mod_wuni_genus
uni_genus <- UniFrac(unite_genus_rare, weighted = FALSE, normalized = TRUE, parallel = FALSE, fast = TRUE)
meta.uni_genus <- as(sample_data(unite_genus_rare), "data.frame")
set.seed(1420)
set.seed(1420)
perm_mod_wuni_genus <- adonis2(wuni_genus ~ treatment+time+farming_system+
farming_system:treatment+
treatment:time+
time:farming_system,
strata=meta.wuni_genus$block,
data = meta.wuni_genus,permutations = 999)
perm_mod_wuni_genus
uni_genus <- UniFrac(unite_genus_rare, weighted = FALSE, normalized = TRUE, parallel = FALSE, fast = TRUE)
meta.uni_genus <- as(sample_data(unite_genus_rare), "data.frame")
set.seed(1420)
perm_mod_uni_genus <- adonis2(uni_genus ~ treatment+time+farming_system+
farming_system:treatment+
treatment:time+
time:farming_system,
strata=meta.uni_genus$block,
data = meta.uni_genus,permutations = 999)
perm_mod_uni_genus
rm(vegan_AMF_rare)
#transfer OTU table from phyloseq into a vegan object
vegan_AMF_genus<-psotu2veg(unite_genus_rare)
#transfer sample data from phyloseq into a vegan object
veganSample_AMF_genus<-pssd2veg(unite_genus_rare)
#distance
set.seed(6758)
nmds_vegan_AMF_genus<-metaMDS(vegan_AMF_genus, distance = "bray", k=2,trymax=1000, autotransform=T, permutations = 999)
nmds_vegan_AMF_genus$stress #0.1892768
plot_ordination(unite_genus_rare, nmds_vegan_AMF_genus, color = "farming_system", shape = "time") + geom_point(size = 3) + theme_bw()
rm(Ord_veganOTU_AMF_rare)
rm(veganSample_AMF_rare)
plot_ordination(unite_genus_rare, wuni_genus, color = "treatment", shape = "time") + geom_point(size = 3) + theme_bw() + ggtitle("Weighted UniFrac")
plot_ordination(unite_genus_rare, wuni_genus, color = "treatment", shape = "time") + geom_point(size = 3) + theme_bw() + ggtitle("Weighted UniFrac genus")
plot_ordination(unite_genus_rare, wuni_genus, color = "farming_system", shape = "time") + geom_point(size = 3) + theme_bw() + ggtitle("Weighted UniFrac genus")
rm(physeq_unite_Filtered2)
physeq_AMF_spec = tax_glom(physeq_AMF, "Species", NArm = T)
unique(tax_table(physeq_AMF_spec)[,7])
sum(sample_sums(physeq_AMF_spec)) #84542
sort(sample_sums(physeq_AMF_spec), decreasing = F)
#keep samples with more than 500 reads
physeq_AMF_spec_500 <- prune_samples(sample_sums(physeq_AMF_spec) >=500, physeq_AMF_spec)
sort(sample_sums(physeq_AMF_spec))
sort(sample_sums(physeq_AMF_spec_500))
#rarefaction
unite_spec_rare <- rarefy_even_depth(physeq_AMF_spec_500, sample.size = min(sample_sums(physeq_AMF_spec_500)), 6020, replace=F, verbose = T) # rarefication on the lowest number of reads
unite_spec_rare
#plot PCoA
spec_unite_pcoa <- phyloseq::ordinate(unite_spec_rare, method = "PCoA") # building pcoa
plot_ordination(unite_spec_rare, spec_unite_pcoa, color = "treatment", shape = "time") + geom_point(size = 3) + theme_bw()
plot_ordination(unite_spec_rare, spec_unite_pcoa, color = "farming_system", shape = "time") + geom_point(size = 3) + theme_bw()
#NMDS
spec_unite_nmds <- phyloseq::ordinate(unite_spec_rare, method = "NMDS")
spec_unite_nmds$stress
plot_ordination(unite_spec_rare, spec_unite_nmds, color = "treatment", shape = "time") + geom_point(size = 3) + theme_bw()
plot_ordination(unite_spec_rare, spec_unite_nmds, color = "treatment", shape = "time") + geom_point(size = 3) + theme_bw()
rm(unite_spec_rare_rel)
unite_spec_rel <- transform_sample_counts(unite_spec_rare, function(x) x/sum(x))
bray_unite_spec <- phyloseq::distance(unite_spec_rel, method = "bray")
meta.unite_spec <- as(sample_data(unite_spec_rare), "data.frame")
set.seed(1546)
perm.spec <- adonis2(bray_unite_spec ~ treatment+time+farming_system+
farming_system:treatment+
treatment:time+
time:farming_system,
strata=meta.unite_spec$block,
data = meta.unite_spec,permutations = 999)
perm.spec
veganSample_AMF_genus$u2Vol<-veganSample_AMF_genus$WC*veganSample_AMF_genus$BD
rm(veganSample_AMF_genus)
#transfer sample data from phyloseq into a vegan object
veganSample_AMF_genus<-pssd2veg(unite_genus_rare)
veganSample_AMF_genus$VWC<-veganSample_AMF_genus$WC*veganSample_AMF_genus$BD
summary(veganSample_AMF_genus$VWC)
veganSample_AMF_genu
veganSample_AMF_genus
rm(dbrda)
rm(dbrda_plot)
rm(dbrda_plot2)
#create the distance matrix
dbrda <- dbrda(vegan_AMF_genus ~ farming_system+time+Condition(block),veganSample_AMF_genus,dist="bray")
#anova(b_dbrda, by="axis")
anova(dbrda, by="term")
#calculate amount of variation explained by the axis
b_xlabel<-paste0("db-RDA1"," ","[", round(((dbrda$CCA$eig[1]/dbrda$CA$tot)*100),1), "%]" )
b_ylabel<-paste0("db-RDA2"," ","[", round(((dbrda$CCA$eig[2]/dbrda$CA$tot)*100),1), "%]" )
#fortify: transfer into data frame that can be used for ggplot
scrs <- fortify(dbrda)
scrs
#select site (-> Samples)
sites <- subset(scrs, subset = Score == "sites")
(Time<-veganSample_AMF_rare$time) #choose group variable here
rm(df)
(Time<-veganSample_AMF_genus$time) #choose group variable here
(System<-veganSample_AMF_genus$farming_system) #choose shape variable
df <- cbind(sites, Time , System) ## add on the group variable
#make the plot
dbrda_plot<-ggplot(df, aes(x = dbRDA1, y = dbRDA2)) +
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
# coord_fixed(ratio=1) +
xlab(b_xlabel)+
ylab(b_ylabel)+
stat_ellipse(aes(color=System),
alpha=.1,
type='t',
size =0.5,
geom="polygon",
level=0.95,
linetype = 2)+
geom_point( aes(color= System, shape=Time),
size = 8,
alpha = 0.5,
show.legend = T)+
scale_shape_manual(values=c(16,17,18), name="")+
scale_color_manual(values=c("black","grey"), labels=c("BioDyn", "ConMin"), name="")+
ggtitle("AMF")+
theme(legend.position = "bottom",
legend.text=element_text(size=14),
legend.title=element_blank(),
plot.margin = unit(c(0,3, 3,3), "mm"))
print(dbrda_plot)
print(dbrda_plot)
names(veganSample_AMF_genus)
b_treatments_env <- veganSample_AMF_genus[,c("pH", "WC", "BD", "C.N", "SOC", "total.N","weed.cover", "PO4_P", "total.P","root.DW", "WHC", "NLFA", "N.roots", "C.roots", "crop.biomass", "plant.height", "N.shoots", "C.shoots", "VWC")]
b_treatments_env$VWC<-scale(b_treatments_env$VWC)
b_treatments_env$pH<-scale(b_treatments_env$pH)
b_treatments_env$C.N<-scale(b_treatments_env$C.N)
b_treatments_env$total.N<-scale(b_treatments_env$total.N)
b_treatments_env$SOC<-scale(b_treatments_env$SOC)
b_treatments_env$weed.cover<-scale(b_treatments_env$weed.cover)
b_treatments_env$total.P<-scale(b_treatments_env$total.P)
b_treatments_env$PO4_P<-scale(b_treatments_env$PO4_P)
b_treatments_env$root.DW<-scale(b_treatments_env$root.DW)
b_treatments_env$WHC<-scale(b_treatments_env$WHC)
b_treatments_env$BD<-scale(b_treatments_env$BD)
b_treatments_env$plant.height<-scale(b_treatments_env$plant.height)
b_treatments_env$N.shoots<-scale(b_treatments_env$N.shoots)
b_treatments_env$C.shoots<-scale(b_treatments_env$C.shoots)
b_treatments_env$NLFA<-scale(b_treatments_env$NLFA)
b_treatments_env$crop.biomass<-scale(b_treatments_env$crop.biomass)
b_treatments_env$WC<-scale(b_treatments_env$WC)
b_treatments_env$N.roots<-scale(b_treatments_env$N.roots)
b_treatments_env$C.roots<-scale(b_treatments_env$C.roots)
set.seed(1722)
rm(b_vec.sp)
b_vec.sp <- envfit(dbrda, b_treatments_env, strata=veganSample_AMF_genus$block,na.rm = TRUE, display="lc")
#add arrows to the plot
#now you can decided if you want to plot vectors based on
#p-values or based on r2 values. I do the latter.
#shortcutting ef$vectors
b_A <- as.list(b_vec.sp$vectors)
(b_A)
#creating the dataframe
b_r2<-as.data.frame(b_A$r)
b_r2
#scale arrows for latter plotting according to the correlation stength.
b_arrows<-as.data.frame(b_A$arrows*4.5*(b_A$r))
b_C<-cbind(b_arrows, b_A$r)
b_C
#subset the correlations with a r>0.4
b_vec.sp.df<-droplevels(subset(b_C,b_A$r>=0.4))
b_vec.sp.df <- cbind(b_vec.sp.df, Species = rownames(b_vec.sp.df))
b_vec.sp.df
rm(dbrda_plot2)
dbrda_plot
coord_fixed(ratio = 1)
## Add environmental variables to the plot
dbrda_plot_env<-dbrda_plot+
geom_segment(data = b_vec.sp.df,
aes(x = 0, xend = dbRDA1,
y = 0, yend = dbRDA2),
arrow = arrow(length = unit(2.5, "mm")),
colour = "black",
alpha=1,
size=0.6,
lineend ="round",
linejoin="round")+
scale_y_continuous(limits=c(-1.8,1.8))+
scale_x_continuous(limits=c(-2,1.8))+
geom_text(data=b_vec.sp.df,
aes(x=dbRDA1,
y=dbRDA2,
label=Species),
color="black",
alpha=0.8,
size=5,
vjust=0,
hjust=0,
check_overlap = F,
position=position_jitter(width=0.2,height=0.1))
dbrda_plot_env
dbrda_plot_env
## Add environmental variables to the plot
dbrda_plot_env<-dbrda_plot+
geom_segment(data = b_vec.sp.df,
aes(x = 0, xend = dbRDA1,
y = 0, yend = dbRDA2),
arrow = arrow(length = unit(2.5, "mm")),
colour = "black",
alpha=1,
size=0.6,
lineend ="round",
linejoin="round")+
geom_text(data=b_vec.sp.df,
aes(x=dbRDA1,
y=dbRDA2,
label=Species),
color="black",
alpha=0.8,
size=5,
vjust=0,
hjust=0,
check_overlap = F,
position=position_jitter(width=0.2,height=0.1))
dbrda_plot_env
rm(GP)
rm(alpha_div_500_rare)
physeq_unite
physeq_unite_Filtered
unite_ASV_rare_re
unite_ASV_rel
unite_ASV_rare
plot_taxa_boxplot(unite_ASV_rel, "Genus", 10, "SampleID", color = "Set2", "Relative abundance of top 10 genera")
library(microbiomeutilities)
plot_taxa_boxplot(unite_ASV_rel, "Genus", 10, "SampleID", color = "Set2", "Relative abundance of top 10 genera")
plot_taxa_boxplot(unite_ASV_rel, "Genus", 10, "farming_system", color = "Set2", "Relative abundance of top 10 genera")
unite_ASV_rel@sam_data
plot_taxa_boxplot(unite_ASV_rel, "Genus", 10, "sampleID", color = "Set2", "Relative abundance of top 10 genera")
plot_taxa_boxplot(unite_ASV_rel, "Genus", 10, "sample_ID", color = "Set2", "Relative abundance of top 10 genera")
plot_taxa_boxplot(unite_ASV_rel, "Genus", 10, "farming_system", color = "Set2", "Relative abundance of top 10 genera")
plot_taxa_boxplot(unite_ASV_rel, "Genus", 10, "treatment", color = "Set2", "Relative abundance of top 10 genera")
unique(tax_table(physeq_AMF)[,6])
plot_taxa_boxplot(unite_ASV_rel, "Genus", 5, "farming_system", color = "Set2", "Relative abundance of top 10 genera")
unite_ASV_rel
unique(tax_table(unite_ASV_rel)[,3])
subset_class <- subset_taxa(relab_AMF_unite, Class %in% c("c__Paraglomeromycetes", "c__Glomeromycetes", "c__Archaeosporomycetes"))
subset_class
subset_class = prune_samples(sample_sums(subset_class)>0, subset_class)
data_class <- subset_class %>%
tax_glom(taxrank = "Class") %>%     #agglomerate at class level
psmelt() %>%                        #melt to long format
filter(Abundance > 0.01) %>%        #small group (<1%) are removed
arrange(Class)                      #sort data frame alphabetically by class
#PERMANOVA
set.seed(8899)
AMF_class_dist <- phyloseq::distance(subset_class, method="bray")
adonis_AMF_class <- adonis2(AMF_class_dist ~ treatment+time+farming_system+
farming_system:treatment+treatment:time,
time:farming_system,                                                                                                 strata=meta.ASV$block,
data=meta.ASV,permutations = 999)
adonis_AMF_class
ggplot(data_class, aes(x=Class, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance") + scale_x_discrete(limits=c("c__Glomeromycetes","C__Paraglomeromycetes","c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00))
ggplot(data_class, aes(x=Class, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance") + scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes","c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
ggplot(data_class, aes(x=Class, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance") + scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes","c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00))
ggplot(data_class, aes(x=Class, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance")+ scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes", "c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill = "Farming system") + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(angle = 35, hjust = 1)) + theme(axis.text.x = element_text(size = 8)) + scale_y_continuous(limits=c(0.00,1.00))
setwd("C:/Users/Katja/Box Sync/PhD Lund Katja/Sequencing/PacBio AMF/Sequencing data AMF/dada2/AMF_DOK trial/PacBio_AMF_workflow/results_dada2")
library(ggpubr)
#taxonomy_AMF
#we remove unassigned, in particular for stats
unique(tax_table(unite_ASV_rel)[,3])
subset_class <- subset_taxa(relab_AMF_unite, Class %in% c("c__Paraglomeromycetes", "c__Glomeromycetes", "c__Archaeosporomycetes"))
subset_class
subset_class = prune_samples(sample_sums(subset_class)>0, subset_class)
data_class <- subset_class %>%
tax_glom(taxrank = "Class") %>%     #agglomerate at class level
psmelt() %>%                        #melt to long format
filter(Abundance > 0.01) %>%        #small group (<1%) are removed
arrange(Class)                      #sort data frame alphabetically by class
#PERMANOVA
set.seed(8899)
AMF_class_dist <- phyloseq::distance(subset_class, method="bray")
adonis_AMF_class <- adonis2(AMF_class_dist ~ treatment+time+farming_system+
farming_system:treatment+treatment:time,
time:farming_system,                                                                                                 strata=meta.ASV$block,
data=meta.ASV,permutations = 999)
adonis_AMF_class
#time: 0.033
adonis_AMF_class.df <- as.data.frame(adonis_AMF_class)
adonis_AMF_class.df<-adonis_AMF_class.df[, c("Df","SumOfSqs", "R2", "F", "Pr(>F)")]
write.table(adonis_AMF_class.df,"adonis_AMF_class.txt",sep="\t",quote=F)
#plot AMF class
boxplot_class_treatment <- ggplot(data_class, aes(x=Class, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance") + scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes","c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00))
print(boxplot_class_treatment)
ggsave("class_drought_final.tiff", width = 18, height = 10, units = "cm")
boxplot_class_system <- ggplot(data_class, aes(x=Class, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance") + scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes","c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
print(boxplot_class_system)
ggsave("class_system_final.tiff", width = 18, height = 10, units = "cm")
#final figure for the publication
boxplot_class_treat_sys <- ggplot(data_class, aes(x=Class, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance")+ scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes", "c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill = "Farming system") + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(angle = 35, hjust = 1)) + theme(axis.text.x = element_text(size = 8)) + scale_y_continuous(limits=c(0.00,1.00))
print(boxplot_class_treat_sys)
ggsave("class_level_final.pdf", width = 40, height = 20, units = "cm")
ggsave("class_level_final.tiff", width = 18, height = 10, units = "cm")
setwd("C:/Users/Katja/Box Sync/PhD Lund Katja/Sequencing/PacBio AMF/Sequencing data AMF/dada2/AMF_DOK trial/PacBio_AMF_workflow")
subset_class <- subset_taxa(unite_ASV_rel, Class %in% c("c__Paraglomeromycetes", "c__Glomeromycetes", "c__Archaeosporomycetes"))
subset_class
subset_class = prune_samples(sample_sums(subset_class)>0, subset_class)
data_class <- subset_class %>%
tax_glom(taxrank = "Class") %>%     #agglomerate at class level
psmelt() %>%                        #melt to long format
filter(Abundance > 0.01) %>%        #small group (<1%) are removed
arrange(Class)                      #sort data frame alphabetically by class
data_class
#PERMANOVA
set.seed(8899)
AMF_class_dist <- phyloseq::distance(subset_class, method="bray")
adonis_AMF_class <- adonis2(AMF_class_dist ~ treatment+time+farming_system+
farming_system:treatment+treatment:time,
time:farming_system,                                                                                                 strata=meta.ASV$block,
data=meta.ASV,permutations = 999)
adonis_AMF_class
boxplot_class_treatment <- ggplot(data_class, aes(x=Class, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance") + scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes","c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00))
print(boxplot_class_treatment)
print(boxplot_class_treatment)
boxplot_class_system <- ggplot(data_class, aes(x=Class, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance") + scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes","c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
print(boxplot_class_system)
print(boxplot_class_system)
boxplot_class_treat_sys <- ggplot(data_class, aes(x=Class, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Class") + ylab("Relative abundance")+ scale_x_discrete(limits=c("c__Glomeromycetes","c__Paraglomeromycetes", "c__Archaeosporomycetes")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill = "Farming system") + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(angle = 35, hjust = 1)) + theme(axis.text.x = element_text(size = 8)) + scale_y_continuous(limits=c(0.00,1.00))
print(boxplot_class_treat_sys)
unique(tax_table(unite_ASV_rel)[,4])
subset_orders <- subset_taxa(unite_ASV_rel, Order %in% c("o__Diversisporales","o__Glomerales","o__Gigasporales"))
glomeromycetes_orders = prune_samples(sample_sums(subset_orders)>0, subset_orders)
glomeromycetes_orders <- glomeromycetes_orders %>%
tax_glom(taxrank = "Order") %>%      #agglomerate at order level
psmelt() %>%                         #melt to long format
filter(Abundance > 0.01) %>%         #small group (<1%) are removed
arrange(Order)                       #sort data frame alphabetically by order
glomeromycetes_plot <- ggplot(glomeromycetes_orders, aes(x=order, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") +  scale_x_discrete(limits=c("Diversisporales","Glomerales","Gigasporales")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(axis.text.x = element_text(size = 10)) + scale_y_continuous(limits=c(0.00,1.00)) + labs(fill="Farming system")
print(glomeromycetes_plot)
glomeromycetes_plot <- ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") +  scale_x_discrete(limits=c("Diversisporales","Glomerales","Gigasporales")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(axis.text.x = element_text(size = 10)) + scale_y_continuous(limits=c(0.00,1.00)) + labs(fill="Farming system")
print(glomeromycetes_plot)
glomeromycetes_plot <- ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") +  scale_x_discrete(limits=c("o__Diversisporales","o__Glomerales","o__Gigasporales")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(axis.text.x = element_text(size = 10)) + scale_y_continuous(limits=c(0.00,1.00)) + labs(fill="Farming system")
print(glomeromycetes_plot)
glomeromycetes_plot <- ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") +  scale_x_discrete(limits=c("o__Diversisporales","o__Glomerales")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(axis.text.x = element_text(size = 10)) + scale_y_continuous(limits=c(0.00,1.00)) + labs(fill="Farming system")
print(glomeromycetes_plot)
ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") + scale_x_discrete(limits=c("o__Diversisporales","o__Glomerales","o__Gigasporales")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00))
ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") + scale_x_discrete(limits=c("o__Diversisporales","o__Glomerales")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00))
boxplot_glomeromycetes_treatment <- ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") + scale_x_discrete(limits=c("o__Diversisporales","o__Glomerales")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00))
ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") + scale_x_discrete(limits=c("o__Diversisporales","o__Glomerales","o__Gigasporales")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
boxplot_glomeromycetes_system <- ggplot(glomeromycetes_orders, aes(x=Order, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("AMF orders within Glomeromycetes") + ylab("Relative abundance") + scale_x_discrete(limits=c("o__Diversisporales","o__Glomerales")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
#PERMANOVA
set.seed(1556)
AMF_glomeromycetes_dist <-phyloseq::distance(subset_orders, method="bray")
adonis_glomeromycetes <-adonis2(AMF_glomeromycetes_dist ~
treatment+time+farming_system+
farming_system:treatment+treatment:time,time:farming_system,                                                         strata=meta.ASV$block,
data=meta.ASV,permutations = 999)
adonis_glomeromycetes
unique(tax_table(unite_ASV_rel)[,5])
subset_family <- subset_taxa(unite_ASV_rel, family %in% c("f__Archaeosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Ambisporaceae", "f__Acaulosporaceae", "f__Paraglomeraceae", "f__Gigasporaceae", "f__Claroideoglomeraceae", "f__Gigasporaceae"))
subset_family <- subset_taxa(unite_ASV_rel, Family %in% c("f__Archaeosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Ambisporaceae", "f__Acaulosporaceae", "f__Paraglomeraceae", "f__Gigasporaceae", "f__Claroideoglomeraceae", "f__Gigasporaceae"))
subset_family
subset_family = prune_samples(sample_sums(subset_family)>0, subset_family)
data_family <- subset_family %>%
tax_glom(taxrank = "Family") %>%
psmelt() %>%
filter(Abundance > 0.01) %>%
arrange(family)
data_family <- subset_family %>%
tax_glom(taxrank = "Family") %>%
psmelt() %>%
filter(Abundance > 0.01) %>%
arrange(Family)
#PERMANOVA
set.seed(8899)
AMF_family_dist <-phyloseq::distance(subset_family, method="bray")
adonis_AMF_family <-adonis2(AMF_family_dist ~ treatment+time+farming_system+
farming_system:treatment+treatment:time,
time:farming_system,                                                                                                 strata=meta.ASV$block,
data=meta.ASV,permutations = 999)
adonis_AMF_family
data_family
ggplot(data_family, aes(x=Family, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Family") + ylab("Relative abundance") + scale_x_discrete(limits=c("f__Acaulosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Archaeosporaceae", "f__Ambisporaceae", "f__Claroideoglomeraceae", "f__Gigasporaceae", "f__Paraglomeraceae")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
unique(tax_table(unite_ASV_rel)[,5])
subset_family
subset_family = prune_samples(sample_sums(subset_family)>0, subset_family)
data_family <- subset_family %>%
tax_glom(taxrank = "Family") %>%
psmelt() %>%
filter(Abundance > 0.01) %>%
arrange(Family)
#PERMANOVA
set.seed(8899)
AMF_family_dist <-phyloseq::distance(subset_family, method="bray")
adonis_AMF_family <-adonis2(AMF_family_dist ~ treatment+time+farming_system+
farming_system:treatment+treatment:time,
time:farming_system,                                                                                                 strata=meta.ASV$block,
data=meta.ASV,permutations = 999)
adonis_AMF_family
ggplot(data_family, aes(x=Family, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Family") + ylab("Relative abundance") + scale_x_discrete(limits=c("f__Acaulosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Archaeosporaceae", "f__Ambisporaceae", "f__Claroideoglomeraceae", "f__Gigasporaceae", "f__Paraglomeraceae")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
boxplot_family_treatment <- ggplot(data_family, aes(x=Family, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Family") + ylab("Relative abundance") + scale_x_discrete(limits=c("f__Acaulosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Archaeosporaceae", "f__Ambisporaceae", "f__Claroideoglomeraceae", "f__Paraglomeraceae")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
print(boxplot_family_treatment)
print(boxplot_family_treatment)
print(boxplot_family_system)
ggplot(data_family, aes(x=Family, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Family") + ylab("Relative abundance") + scale_x_discrete(limits=c("f__Acaulosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Archaeosporaceae", "f__Ambisporaceae", "f__Claroideoglomeraceae", "f__Paraglomeraceae")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
boxplot_family_system <- ggplot(data_family, aes(x=Family, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Family") + ylab("Relative abundance") + scale_x_discrete(limits=c("f__Acaulosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Archaeosporaceae", "f__Ambisporaceae", "f__Claroideoglomeraceae", "f__Paraglomeraceae")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
print(boxplot_family_system)
ggplot(data_family, aes(x=Family, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Family") + ylab("Relative abundance")+ scale_x_discrete(limits=c("f__Acaulosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Archaeosporaceae", "f__Ambisporaceae", "f__Claroideoglomeraceae", "f__Paraglomeraceae")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(size = 10)) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
boxplot_family_treat_sys <- ggplot(data_family, aes(x=Family, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Family") + ylab("Relative abundance")+ scale_x_discrete(limits=c("f__Acaulosporaceae", "f__Glomeraceae", "f__Diversisporaceae", "f__Archaeosporaceae", "f__Ambisporaceae", "f__Claroideoglomeraceae", "f__Paraglomeraceae")) + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + theme(axis.text.x = element_text(size = 7)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(size = 10)) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
print(boxplot_family_treat_sys)
unique(tax_table(unite_ASV_rel)[,6])
subset_taxa(rel_ab_AMF, genus %in% c("g__Acaulospora", "g__Glomus", "g__Palaeospora", "NA", "g__Diversispora", "g__Funneliformis", "g__Paraglomus", "g__Ambispora", "g__Claroideoglomus", "g__Gigaspora", "Cetraspora", "g__Dominikia", "g__Archaeospora"))
subset_genera <- subset_taxa(unite_ASV_rel, genus %in% c("g__Acaulospora", "g__Glomus", "g__Palaeospora", "NA", "g__Diversispora", "g__Funneliformis", "g__Paraglomus", "g__Ambispora", "g__Claroideoglomus", "g__Gigaspora", "Cetraspora", "g__Dominikia", "g__Archaeospora"))
subset_genera <- subset_taxa(unite_ASV_rel, Genus %in% c("g__Acaulospora", "g__Glomus", "g__Palaeospora", "NA", "g__Diversispora", "g__Funneliformis", "g__Paraglomus", "g__Ambispora", "g__Claroideoglomus", "g__Gigaspora", "Cetraspora", "g__Dominikia", "g__Archaeospora"))
subset_genera = prune_samples(sample_sums(subset_genera)>0, subset_genera)
data_genera <- subset_genera %>%
tax_glom(taxrank = "Genus") %>%
psmelt() %>%
filter(Abundance > 0.01) %>%
arrange (Genus)
#PERMANOVA
set.seed(8899)
AMF_genus_dist <-phyloseq::distance(subset_genera, method="bray")
adonis_AMF_genus <-adonis2(AMF_genus_dist ~ treatment+time+farming_system+
farming_system:treatment+treatment:time,
time:farming_system,                                                                                                 strata=meta.ASV$block,
data=meta.ASV,permutations = 999)
adonis_AMF_genus
ggplot(data_genera, aes(x=Genus, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Genus") + ylab("Relative abundance") + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + scale_x_discrete(limits=c("g__Acaulospora", "g__Paraglomus", "g__Diversispora", "g__Funneliformis", "g__Ambispora", "g__Palaeospora", "g__Claroideoglomus", "g__Cetraspora", "g__Gigaspora", "NA", "g__Glomus", "g__Dominikia", "g__Archaeospora")) + theme(axis.text.x = element_text(size = 8)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + theme(axis.text.x = element_text(angle = 35, hjust = 1)) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
genera_plot <- ggplot(data_genera, aes(x=Genus, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Genus") + ylab("Relative abundance") + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + scale_x_discrete(limits=c("g__Acaulospora", "g__Paraglomus", "g__Diversispora", "g__Funneliformis", "g__Ambispora", "g__Palaeospora", "g__Claroideoglomus", "g__Archaeospora")) + theme(axis.text.x = element_text(size = 8)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + theme(axis.text.x = element_text(angle = 35, hjust = 1)) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
ggplot(data_genera, aes(x=Genus, y=Abundance, fill=farming_system)) + stat_boxplot(geom = "errorbar") + xlab("Genus") + ylab("Relative abundance") + geom_boxplot() + scale_fill_manual(values=c("grey70", "grey25")) + scale_x_discrete(limits=c("g__Acaulospora", "g__Paraglomus", "g__Diversispora", "g__Funneliformis", "g__Ambispora", "g__Palaeospora", "g__Claroideoglomus", "g__Archaeospora")) + theme(axis.text.x = element_text(size = 8)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + theme(axis.text.x = element_text(angle = 35, hjust = 1)) + labs(fill="Farming system") + scale_y_continuous(limits=c(0.00,1.00))
#additional
genera_plot + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(size = 10))
genera_plot + facet_wrap(.~treatment, scales="free_x") + theme(axis.text.x = element_text(size = 10))
ggplot(data_genera, aes(x=Genus, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Genus") + ylab("Relative abundance") + scale_x_discrete(limits=c("g__Acaulospora", "g__Paraglomus", "g__Diversispora", "g__Funneliformis", "g__Ambispora", "g__Palaeospora", "g__Claroideoglomus", "g__Cetraspora", "g__Gigaspora", "NA")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
genera_treatment <- ggplot(data_genera, aes(x=Genus, y=Abundance, fill=treatment)) + stat_boxplot(geom = "errorbar") + xlab("Genus") + ylab("Relative abundance") + scale_x_discrete(limits=c("g__Acaulospora", "g__Paraglomus", "g__Diversispora", "g__Funneliformis", "g__Ambispora", "g__Palaeospora", "g__Claroideoglomus")) + geom_boxplot() + scale_fill_brewer(palette = "Greys") + theme(axis.text.x = element_text(size = 7.5)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black")) + labs(fill="Drought treatment") + scale_y_continuous(limits=c(0.00,1.00)) + theme(axis.text.x = element_text(angle = 35, hjust = 1))
print(genera_treatment)
rm(nmds_ord)
nmds_ord <- metaMDS(vegan_AMF_genus, distance = "bray", k=2, trymax=1000, autotransform=T)
nmds_ord$stress
#stress is goodness of fit
goodness(nmds_ord)
stressplot(nmds_ord)
#this function draws NMDS ordination diagram with sites (=my samples)
plot(nmds_ord, display = 'sites', type = 't', main = 'Goodness of fit')
#envfit with metadata
nmds_meta <- as(sample_data(unite_ASV_rel), "data.frame")
nmds_meta
rm(nmds_all)
View(nmds_meta)
env_nmds <- nmds_meta[,7:24]
data.scores_nmds = as.data.frame(scores(nmds_ord, display = 'sites')) #save NMDS to dataframe
#add grouping variable to dataframe
data.scores_nmds <- cbind(as.data.frame(data.scores_nmds), farming_system = env_nmds$farming_system,
treatment = env_nmds$treatment)
env_nmds <- nmds_meta[,5:24]
rm(data.scores_nmds)
data.scores_nmds = as.data.frame(scores(nmds_ord, display = 'sites')) #save NMDS to dataframe
#add grouping variable to dataframe
data.scores_nmds <- cbind(as.data.frame(data.scores_nmds), farming_system = env_nmds$farming_system,
treatment = env_nmds$treatment)
head(data.scores_nmds)
#add grouping variable to dataframe
data.scores_nmds <- cbind(as.data.frame(data.scores_nmds), farming_system = env_nmds$farming_system,
treatment = env_nmds$treatment)
nmds_meta
#envfit with metadata
nmds_meta <- as(sample_data(unite_genus_rel), "data.frame")
nmds_meta
env_nmds <- nmds_meta[,5:24]
data.scores_nmds = as.data.frame(scores(nmds_ord, display = 'sites')) #save NMDS to dataframe
#add grouping variable to dataframe
data.scores_nmds <- cbind(as.data.frame(data.scores_nmds), farming_system = env_nmds$farming_system,
treatment = env_nmds$treatment)
head(data.scores_nmds)
#calculate envfit
set.seed(0935)
env.fit <- envfit(scores(nmds_ord), env_nmds, permutations = 999, na.rm = TRUE, strata=nmds_meta$block)
env.fit
#extract scores from environment
env.scores <- as.data.frame(scores(env.fit, display = "vectors"))
env.scores <- cbind(env.scores, env.variables = rownames(env.scores), pval = env.fit$vectors$pvals)
head(env.scores)
sig.env <- subset(env.scores, pval<=0.05) #extract only significant soil parameters
head(sig.env)
#vectors as continuous, factors as categorical
#vectors are soil parameters and factors (centroids) are treatment + farming system
en_coord_cont = as.data.frame(scores(env.fit, "vectors")) * ordiArrowMul(env.fit)
en_coord_cat = as.data.frame(scores(env.fit, "factors")) * ordiArrowMul(env.fit)
nmds_final <- ggplot() + geom_point(data = data.scores_nmds, aes(x = NMDS1, y = NMDS2, colour = farming_system), size = 5, alpha =                   0.5) + theme_bw() + scale_colour_manual("Farming system", values=c("grey70", "grey25")) + theme(axis.title =                           element_text(size = 12, colour = "black"), axis.ticks = element_blank(), axis.text = element_blank(), legend.key =                     element_blank(), legend.title = element_text(size = 11, colour = "black"), legend.text = element_text(size = 10, colour =               "black")) + labs(colour = "farming_system") + annotate("text", x=1.0, y=-1.0, size=5,label= paste("Stress =",                          round(nmds_ord$stress, digits=2))) + geom_segment(data = sig.env, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),                             arrow = arrow(length = unit(0.25, "cm")), colour = "black", lwd=0.3) + ggrepel::geom_text_repel(data =                                 sig.env, aes(x=NMDS1, y=NMDS2, label = env.variables), cex = 4, color="black", direction = "both", segment.size = 0.25) +               geom_point(data = en_coord_cat, aes(x = NMDS1, y = NMDS2), shape = "diamond", size = 5, alpha = 0.8, colour = "black") +               geom_text(data = en_coord_cat, aes(x = NMDS1, y = NMDS2+0.04), label = row.names(en_coord_cat), colour =                               "black", fontface = "bold") + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),                            panel.background = element_blank(), axis.line = element_line(colour = "black"))
print(nmds_final)
